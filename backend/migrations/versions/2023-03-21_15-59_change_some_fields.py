"""change some fields

Revision ID: 06892bbecb94
Revises: 85d4ddf1c238
Create Date: 2023-03-21 15:59:52.007996

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '06892bbecb94'
down_revision = '85d4ddf1c238'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('design', 'deadline_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('measurement', 'come_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('order', 'status',
               existing_type=postgresql.ENUM('NEW', 'APPROVED', 'DENIED', 'APPOINTED', 'MEASURE_TIME', 'MEASURE_ATTACHED', 'DESIGN_TIME', 'DESIGN_APPROVED', name='status'),
               nullable=True)
    op.alter_column('order', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('order', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('order', 'status',
               existing_type=postgresql.ENUM('NEW', 'APPROVED', 'DENIED', 'APPOINTED', 'MEASURE_TIME', 'MEASURE_ATTACHED', 'DESIGN_TIME', 'DESIGN_APPROVED', name='status'),
               nullable=False)
    op.alter_column('measurement', 'come_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('design', 'deadline_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    # ### end Alembic commands ###
